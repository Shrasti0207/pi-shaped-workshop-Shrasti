name: Secure Pipeline scans - Day 4

on:
  push:
    branches:
      - main
      - master            
  pull_request:
    branches:
      - main 
      - master

jobs:
  sast_scans:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        working-directory: day4

      - name: Run Bandit (Python SAST)
        id: bandit
        run: |
          pip install bandit
          bandit -r . -f html -o bandit-report.html || true
        working-directory: day4
        shell: bash
        continue-on-error: true

      - name: Upload Bandit Report
        uses: actions/upload-artifact@v4
        with:
          name: bandit-report
          path: day4/bandit-report.html

      - name: Run Semgrep (Default Behavior)
        id: semgrep
        run: |
          pip install semgrep
          semgrep --config=auto --json --output=semgrep-report.json || true
        working-directory: day4
        shell: bash
        continue-on-error: true

      - name: Upload Semgrep Json Report
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-json-report
          path: day4/semgrep-report.json

  trivy_scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Trivy File System Scan
        uses: aquasecurity/trivy-action@0.28.0
        with:
            scan-type: fs       # file system scan (repo code)
            format: json        # generate HTML report
            output: day4/trivy-report.json
            ignore-unfixed: true
            vuln-type: "os,library"
        continue-on-error: true

      - name: Upload Trivy Report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: day4/trivy-report.json

  dast_scan:
    runs-on: ubuntu-latest
    needs: [sast_scans, trivy_scan]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        working-directory: Security_Compliance_workshop-aman/day3

      - name: Start Flask App
        run: |
          nohup python app.py > app.log 2>&1 &
          echo "Waiting for app to start..."
          sleep 15
          curl --fail http://localhost:5000
        working-directory: Security_Compliance_workshop-aman/day3
        shell: bash

      - name: Show logs on failure
        if: failure()
        run: |
          echo "--- App failed to start. Displaying logs from app.log: ---"
          cat app.log
        working-directory: Security_Compliance_workshop-aman/day3

      - name: Run ZAP Baseline Scan via Docker
        continue-on-error: true
        run: |
          sudo chown 1000:1000 ${{ github.workspace }}
          docker run --rm \
            --add-host=host.docker.internal:host-gateway \
            -v ${{ github.workspace }}:/zap/wrk \
            ghcr.io/zaproxy/zaproxy:stable zap-baseline.py \
            -t http://host.docker.internal:5000/ \
            -g gen.conf \
            -J report_json.json \
            -w report_md.md \
            -r report_html.html

      - name: Upload ZAP DAST Reports
        uses: actions/upload-artifact@v4
        with:
          name: zap-dast-reports
          path: |
            report_json.json
            report_md.md
            report_html.html