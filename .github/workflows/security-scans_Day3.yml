name: CI - Secure Scans

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  static-scans:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install scanning tools
        run: |
          python -m pip install --upgrade pip
          pip install bandit semgrep

      - name: Run Bandit (HTML)
        run: |
          mkdir -p reports
          bandit -r . -f html -o reports/bandit-report.html || true

      - name: Run Semgrep (JSON)
        run: |
          mkdir -p reports
          semgrep --config=auto --json --output=reports/semgrep-report.json || true

      - name: Upload static-scan reports
        uses: actions/upload-artifact@v4
        with:
          name: static-scan-reports
          path: reports/

  gitleaks-scan:
    runs-on: ubuntu-latest
    needs: static-scans
    steps:
      - name: Checkout (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        with:
          args: "--report-format json --report-path gitleaks-report.json"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Gitleaks Report
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-report
          path: gitleaks-report.json

  zaproxy-scan:
    runs-on: ubuntu-latest
    needs: static-scans
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        working-directory: day3

      - name: Start Flask App
        run: |
          nohup python app.py > app.log 2>&1 &
          echo "Waiting for app to start..."
          sleep 15
          curl --fail http://localhost:5000
        working-directory: day3
        shell: bash

      - name: Show logs on failure
        if: failure()
        run: |
          echo "--- App failed to start. Displaying logs from app.log: ---"
          cat app.log
        working-directory: day3

      - name: Run ZAP Baseline Scan via Docker
        continue-on-error: true
        run: |
          # Change ownership of the workspace to the ZAP user (UID 1000)
          # This is the crucial fix for the "Permission denied" error.
          sudo chown 1000:1000 ${{ github.workspace }}

          docker run --rm \
            --add-host=host.docker.internal:host-gateway \
            -v ${{ github.workspace }}:/zap/wrk \
            ghcr.io/zaproxy/zaproxy:stable zap-baseline.py \
            -t http://host.docker.internal:5000/ \
            -g gen.conf \
            -J report_json.json \
            -w report_md.md \
            -r report_html.html

      - name: Upload ZAP DAST Reports
        uses: actions/upload-artifact@v4
        with:
          name: zap-dast-reports
          path: |
            report_json.json
            report_md.md
            report_html.html